# Stage 1: Build Aptos Node
FROM debian:stable

ARG APTOS_BRANCH
ARG NODE_COUNT
ARG NETWORK_IP
ARG FULLNODE_NODES
ARG ROOT_KEY
ARG CHAIN_ID
ARG GENESIS_DIR
ARG LAYOUT_FILE
ARG SKIP_NODE_BUILD

# Install required tools and dependencies
RUN apt update && apt install -y \
    git \
    curl \
    wget \
    cmake \
    clang \
    build-essential \
    libssl-dev \
    lld \
    openssl \
    python3 \
    python3-pip \
    python-is-python3 \
    python3-venv \
    yq \
    sudo

# Get instrumentation library
RUN wget https://storage.googleapis.com/antithesis-aptos/libvoidstar.so -O /usr/lib/libvoidstar.so


# Clone Aptos repository
RUN git clone --single-branch -b $APTOS_BRANCH --depth=1 https://github.com/aptos-labs/aptos-core.git
WORKDIR /aptos-core
RUN CHANNEL=$(grep -oP 'channel\s*=\s*"\K[^"]+' rust-toolchain.toml 2>/dev/null || echo "") && \
    if [ -n "$CHANNEL" ] && [ "$(printf '%s\n' "1.75.0" "$CHANNEL" | sort -V | head -n1)" = "$CHANNEL" ]; then \
        sed -i 's/channel = "[^"]*"/channel = "1.81.0"/' rust-toolchain.toml; \
    fi
COPY ./scripts/antithesis-templates/gen.sh gen.sh
RUN chmod +x gen.sh
COPY ./scripts/antithesis-templates/antithesis.patch antithesis.patch
COPY ./scripts/antithesis-templates/antithesis-cpu.patch antithesis-cpu.patch

# Build the aptos-node binary
RUN python3 -m venv .venv
RUN /bin/bash -c "source .venv/bin/activate && scripts/dev_setup.sh -b -t"

ENV PATH="/root/.cargo/bin:$PATH"
RUN ./gen.sh
